# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions: 
  contents: read

jobs:

  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod
          cache: true

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "21.12"

      - name: Generate rpc API-entities
        run: make generate

      - name: Ensure no diff after generate
        run: git diff --exit-code

      - name: Build
        run: |
          mkdir -p ./bin
          while read -r pkg name; do
            bin="./bin/$(basename "$pkg")"
            echo "building $pkg -> $bin"
            go build -v -o "$bin" "$pkg"
          done < <(go list -f '{{.ImportPath}} {{.Name}}' ./cmd/... | awk '$2=="main"{print $1" "$2}')


      - name: Test
        run: go test -v -race -covermode=atomic -coverprofile=coverage.out ./...
      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.out
          if-no-files-found: ignore

  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version: stable
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.4.0
